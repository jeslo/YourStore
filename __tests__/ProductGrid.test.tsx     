import React from 'react';
import { render, fireEvent, cleanup } from '@testing-library/react-native';
import ProductGrid from '../src/components/ProductGrid';

afterEach(cleanup);

const mockProducts = [
  { id: '1', name: 'Test Product 1', price: 10, image: '', description: '' },
  { id: '2', name: 'Test Product 2', price: 20, image: '', description: '' },
];

// Optional mock for ProductCard if you want to isolate ProductGrid
jest.mock('../src/components/ProductCard', () => {
  return ({ product, onPress }) => {
    return <Text onPress={onPress}>{product.name}</Text>;
  };
});

describe('ProductGrid', () => {
  it('renders products correctly in grid mode', () => {
    const onPressMock = jest.fn();
    const { getByText } = render(
      <ProductGrid products={mockProducts} onPressCard={onPressMock} viewMode="grid" />
    );
    expect(getByText('Test Product 1')).toBeTruthy();
    expect(getByText('Test Product 2')).toBeTruthy();
  });

  it('calls onPressCard callback when product pressed', () => {
    const onPressMock = jest.fn();
    const { getByText } = render(
      <ProductGrid products={mockProducts} onPressCard={onPressMock} viewMode="list" />
    );

    fireEvent.press(getByText('Test Product 1'));
    expect(onPressMock).toHaveBeenCalledWith(mockProducts[0]);
  });
});
